[user]
	name = Gus Wynn

[includeIf "gitdir:repos/"]
  path = .gitconfig-personal
[includeIf "gitdir:work/"]
  path = .gitconfig-work
  
[alias]
  st = status
  staged = diff --staged
  ds = diff --staged
  s = status
  sh = show
  inf = show --name-only
  d = diff
  c = checkout
  co = checkout
  up = checkout
  a = branch
  da = diff --cached
  # `sl` does not use `--graph` as it just is used to quickly list the commits you have involved on your branch
  # `ssl` shows the full graph
  ssl = log --graph --branches --pretty=format:'commit: %C(bold red)%h%Creset %C(red)<%H>%Creset %C(bold magenta)%d %Creset%ndate: %C(bold yellow)%cd %Creset%C(yellow)%cr%Creset%nauthor: %C(bold blue)%an%Creset %C(blue)<%ae>%Creset%n%C(cyan)%s%n%Creset'
  #sl-dep = log --branches --oneline --max-count=25
  sl = slg
  slg = log --branches --oneline --max-count=15 --graph
  branchlog = log --oneline --first-parent --max-count=15
  curlog = log --oneline --first-parent HEAD

  topull = log --oneline ..upstream/main
  # up to date forks: https://stefanbauer.me/articles/how-to-keep-your-git-fork-up-to-date
  newup = remote add upstream
  newor = remote add origin
  # then
  # git fetch upstream
  # git rebase upstream/<main branch>
  # then push, might need force
  #
  # or try this
  # git switch -C master upstream/master
  # git pull upstream/master
  #
  # rename branch: https://www.hanselman.com/blog/EasilyRenameYourGitDefaultBranchFromMasterToMain.aspx
  # git branch -m master main
  # git push -u origin main
  # git push origin --delete <old branch>
  #
  # cleanup
  # old branches:
  # git branch --merged
  # git branch -d <branch name>
  #
  # git remote prune origin (not sure on this one)
  # git branch -r --merged
  # git push origin --delete <branch name>

[init]
  defaultBranch = main

[diff]
  noprefix = true

[core]
  excludesFile = ~/repos/dotfiles/.gitignore
